name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cc: gcc
            cxx: g++
          - os: ubuntu-latest
            cc: clang
            cxx: clang++
          - os: windows-2019
            cc: cl
            cxx: cl
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install development tools
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install cmake build-essential gcc-multilib g++-multilib

    - name: Build on Linux
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cmake -B build -S . -DCMAKE_EXE_LINKER_FLAGS="-Wl,--no-undefined" -DCMAKE_INSTALL_PREFIX="$PWD/dist"
        cmake --build build --target all
        cmake --build build --target install

    - name: Add msbuild to PATH
      if: startsWith(matrix.os, 'windows')
      uses: microsoft/setup-msbuild@v1.1
    - name: Build on Windows
      if: startsWith(matrix.os, 'windows')
      run: |
        cmake -G "Visual Studio 16 2019" -A Win32 -B build -DCMAKE_INSTALL_PREFIX="dist"
        msbuild -verbosity:normal /property:Configuration=Release build/INSTALL.vcxproj

    - name: Extract branch name
      shell: bash
      run: echo "branch=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '_')" >> $GITHUB_OUTPUT
      id: extract_branch
    - name: Extract gamedir
      shell: bash
      run: echo "gamedir=$(grep build/CMakeCache.txt -Ee 'GAMEDIR:STRING=[a-z]+' | cut -d '=' -f 2)" >> $GITHUB_OUTPUT
      id: extract_gamedir
    - name: Upload linux artifact
      if: startsWith(matrix.os, 'ubuntu') && matrix.cc == 'gcc'
      uses: actions/upload-artifact@v3
      with:
        name: BubbleMod-X-${{ steps.extract_branch.outputs.branch }}-linux
        path: dist/${{ steps.extract_gamedir.outputs.gamedir }}
    - name: Upload windows artifact
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v3
      with:
        name: BubbleMod-X-${{ steps.extract_branch.outputs.branch }}-windows
        path: dist/${{ steps.extract_gamedir.outputs.gamedir }}

